from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from asgiref.sync import sync_to_async

from subscriptions.models import BotUser, Subscription

router = Router()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫
async def send_user_subscriptions(user_id: int, send_func):
    user, _ = await sync_to_async(BotUser.objects.get_or_create)(
    telegram_id=user_id
    )
    subscriptions = await sync_to_async(list)(
        Subscription.objects.filter(user=user).select_related("coin")
    )

    if not subscriptions:
        await send_func("‚ùó –í—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∏ –Ω–∞ –æ–¥–Ω—É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /list, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –º–æ–Ω–µ—Ç—É.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    lines = [f"‚Ä¢ {sub.coin.name} ({sub.coin.symbol.upper()})" for sub in subscriptions]
    text = "üìã –í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏:\n\n" + "\n".join(lines)

    await send_func(text)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ –∫–æ–º–∞–Ω–¥–µ
@router.message(Command("subscriptions"))
async def subscriptions_cmd(message: Message):
    await send_user_subscriptions(message.from_user.id, message.answer)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ –∫–Ω–æ–ø–∫–µ
@router.callback_query(F.data == "subscriptions")
async def subscriptions_callback(query: CallbackQuery):
    await send_user_subscriptions(query.from_user.id, query.message.answer)
    await query.answer()